AWSTemplateFormatVersion: '2010-09-09'

Description: 
  This CloudFormation template will deploy a an IAM role and some Secrets to 
  allow the CI/CD pipeline in the production account to deploy candidate releases
  (via privately shared app in the AWS Serverless Application Repository (SAR).

Parameters:
  GoogleAuthMethod:
    Type: String
    AllowedValues: ["Google Credentials", "Workload Identity Federation", "Both"]
    Default: "Google Credentials"
  GoogleCredentials:
    Description: Google Workspaces Credentials File, to log into Google (content of credentials.json)
    Type: String
    NoEcho: true
  GoogleAdminEmail:
    Description: Google Workspaces Admin email
    Type: String
    NoEcho: true
  WIFServiceAccountEmail:
    Description: Workload Identity Federation, the email address of service account used to impersonate a user using 
    Type: String
    NoEcho: true
  WIFClientLibraryConfig:
    Description: Workload Identity Federation, the client library config file for the provider (AWS Account)  (contents of clientLibraryConfig-provider.json)
    Type: String
    NoEcho: true
  SCIMEndpointUrl:
    Description: AWS IAM Identity Center SCIM Endpoint Url
    Type: String
    NoEcho: true
    AllowedPattern: "https://scim.(us(-gov)?|ap|ca|cn|eu|sa)-(central|(north|south)?(east|west)?)-([0-9]{1}).amazonaws.com/(.*)-([a-z0-9]{4})-([a-z0-9]{4})-([a-z0-9]{12})/scim/v2/"
  SCIMEndpointAccessToken:
    Description: AWS IAM Identity Center SCIM AccessToken
    Type: String
    NoEcho: true  
  IdentityStoreId:
    Description: The Id of the Identity Store for the AWS IAM Identity Center instance see (settings page)
    Type: String
    AllowedPattern: "d-[1-z0-9]{10}"
    

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Google Authentication Method
        Parameters:
          - GoogleAuthMethod
      - Label:
          default: Parameters for Google Credentials based authentication, required if either Google Credentials or Both have been selected for Google Authentication Method
        Parameters:
          - GoogleAdminEmail
          - GoogleCredentials
      - Label: 
          default: Parameters for Workload Identity Federation based authentication, required if either Workload Identity Federation or Both have been selected for Google Authentication Method
        Parameters:
          - WIFServiceAccountEmail
          - WIFClientLibraryConfig
      - Label:
          default: AWS IAM Identity Center
        Parameters:
          - SCIMEndpointUrl
          - SCIMEndpointAccessToken
          - IdentityStoreId
            
    ParameterLabels:
      GoogleAuthMethod:
        default: "Which Google Auth Methods do you want to test with?"
      GoogleCredentials:
        default: "contents of credentials.json"
      GoogleAdminEmail:
        default: "admin@WorkspaceDomain"
      WIFServiceAccountEmail:
        default: "service-account@@WorkspaceDomain"
      WIFClientLibraryConfig:
        default: "contents of clientLibraryConfig-provider.json"
      SCIMEndpointUrl:
        default: "https://scim.<region>.amazonaws.com/<instance id>/scim/v2/"
      SCIMEndpointAccessToken:
        default: "AWS SSO SCIM Access Token"
      IdentityStoreId:
        default: "d-1234567abc"

Conditions:
  GoogleCreds: !Or [!Equals [!Ref "GoogleAuthMethod", Google Credentials], !Equals [!Ref "GoogleAuthMethod", Both]]
  WIFCreds: !Or [!Equals [!Ref "GoogleAuthMethod", Workload Identity Federation], !Equals [!Ref "GoogleAuthMethod", Both]]


Rules:
  # Fail when any assertion returns false
  # If they have selected Google Credentials then check they have provided valid data for GoogleCredentials
  GoogleCredentialsOnly:
    RuleCondition: !Or [!Equals [!Ref "GoogleAuthMethod", Google Credentials], !Equals [!Ref "GoogleAuthMethod", Both]]
    Assertions:
      - AssertDescription: You have selected Google Credentials, You need to provide a Google Admin email address.
        Assert: !Not
          - !Equals
            - !Ref GoogleAdminEmail
            - "" 
      - AssertDescription: You have selected Google Credentials, You need to provide the content of a Credentials file (json).
        Assert: !Not
          - !Equals
            - !Ref GoogleCredentials
            - ""
  # If they have selected Workload Identity Federation, then check they have provide valid data for WIF
  WorkloadIdentityFederationOnly:
    RuleCondition: !Or [!Equals [!Ref "GoogleAuthMethod", Workload Identity Federation], !Equals [!Ref "GoogleAuthMethod", Both]]
    Assertions:
      - AssertDescription: You have selected Workload Identity Federation, You need to provide a Google Service Account email address.
        Assert: !Not
          - !Equals
            - !Ref WIFServiceAccountEmail
            - ""
      - AssertDescription: You have selected Workload Identity Federation, You need to provide the content of a Client Library Config file (json).
        Assert: !Not
          - !Equals
            - !Ref WIFClientLibraryConfig
            - ""

Resources:
  GoogleCredentialSecret:
    Type: "AWS::SecretsManager::Secret"
    Condition: GoogleCreds
    Properties:
      Name: TestGoogleCredentials
      SecretString: !Ref GoogleCredentials

  GoogleAdminEmailSecret:
    Type: "AWS::SecretsManager::Secret"
    Condition: GoogleCreds
    Properties:
      Name: TestGoogleAdminEmail
      SecretString: !Ref GoogleAdminEmail

  WIFServiceAccountEmailSecret:
    Type: "AWS::SecretsManager::Secret"
    Condition: WIFCreds
    Properties:
      Name: TestWIFServiceAccountEmail
      SecretString: !Ref WIFServiceAccountEmail

  WIFClientLibraryConfigSecret:
    Type: "AWS::SecretsManager::Secret"
    Condition: WIFCreds
    Properties:
      Name: TestWIFClientLibraryConfigSecret
      SecretString: !Ref WIFClientLibraryConfig

  SSoSCIMUrlSecret: # This can be moved to custom provider
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: TestSCIMEndpointUrl
      SecretString: !Ref SCIMEndpointUrl

  SSoSSCIMAccessTokenSecret: # This can be moved to custom provider
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: TestSCIMAccessToken
      SecretString: !Ref SCIMEndpointAccessToken

  RegionSecret: 
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: TestRegion
      SecretString: !Select [1, !Split [".", !Ref SCIMEndpointUrl]]

  IdentityStoreIdSecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: TestIdentityStoreId
      SecretString: !Ref IdentityStoreId
